Алгоритм генерации фигур
Вход:
```board``` — текущее состояние доски (8x8)
```usedPieces``` — список уже использованных фигур (для баланса)
Выход:
```pieces``` — список из 3 новых фигур для игрока
```nextPiece``` — предварительная следующая фигура
Шаги алгоритма:
1. Анализ доски
Определить:

Свободные позиции
Количество и расположение "дыр"
Линии, близкие к заполнению
2. Попытка "умной" генерации
Повторять, пока не найдётся допустимый набор:

Сгенерировать случайную комбинацию из 3 фигур: I, L, J, O, S, T, Z
Для каждой фигуры в наборе проверить:
Может ли она быть размещена на текущей доске?
Создаст ли она новые "дыры"? (Штраф за это)
Полезна ли она с точки зрения очистки линий?
Оценить совместимость фигур между собой
Если набор прошёл все проверки — принять его
Если после N попыток подходящего набора нет → перейти к шагу 3.

3. "Безопасная" генерация
Сформировать набор из простых фигур:

Приоритет: I, O
Эти фигуры почти всегда можно разместить без проблем
4. Проверка на допустимость
Убедиться, что:

Все три фигуры могут быть размещены на доске
Их использование не приведёт к мгновенному тупику
Если всё ок → сохранить набор

5. Генерация предварительной фигуры (Preview)
Выбрать следующую фигуру:

Учитывая текущий баланс фигур
Чтобы сочеталась с последними 3 фигурами
Чтобы была максимально полезной
6. Балансировка
Обновить статистику использования фигур:

Избегать повторений сложных фигур (S, Z)
Поддерживать разнообразие